/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.78
 * Generated at: 2023-09-25 06:08:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class user_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/임베디드웹/project/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/MovieProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1690855704120L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/resources/css/default.css\" />\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/resources/css/header.css\" />\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/resources/css/user.css\" />\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/resources/css/footer.css\" />\n");
      out.write("<!-- Swiper -->\n");
      out.write("<link\n");
      out.write("	href=\"https://hangeul.pstatic.net/hangeul_static/css/NanumBarunGothicYetHangul.css\"\n");
      out.write("	rel=\"stylesheet\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("	<!-- 헤더 -->\n");
      out.write("	<header>\n");
      out.write("		<div id=\"header_section\" class=\"header\">\n");
      out.write("			<h1 class=\"logo\">\n");
      out.write("				<a href=\"index.html\"></a>\n");
      out.write("			</h1>\n");
      out.write("			<div class=\"gnb\">\n");
      out.write("				<ul class=\"menu1\">\n");
      out.write("					<li><a href=\"\"><img src=\"/resources/image/페이스북.png\"\n");
      out.write("							alt=\"페이스북로고\"></a></li>\n");
      out.write("					<li><a href=\"\" style=\"width: 35px\"><img\n");
      out.write("							src=\"/resources/image/유튜브.png\" alt=\"유튜브로고\"></a></li>\n");
      out.write("					<li><a href=\"\"><img src=\"/resources/image/인스타그램.png\"\n");
      out.write("							alt=\"인스타그램로고\"></a></li>\n");
      out.write("				</ul>\n");
      out.write("				<ul class=\"menu2\">\n");
      out.write("					<li><a href=\"\">멤버십</a></li>\n");
      out.write("					<li><a href=\"\">고객센터</a></li>\n");
      out.write("					<li><a href=\"\">단체관람/대관문의</a></li>\n");
      out.write("					<li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/logout.do\">로그아웃</a></li>\n");
      out.write("				</ul>\n");
      out.write("				<ul class=\"menu3\">\n");
      out.write("					<li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/join.do\">회원가입</a></li>\n");
      out.write("					<li><a href=\"\">바로예매</a></li>\n");
      out.write("					<li><a href=\"\"><img src=\"/resources/image/햄버거버튼.png\"></a></li>\n");
      out.write("				</ul>\n");
      out.write("				<div class=\"nav\">\n");
      out.write("					<ul class=\"submenu\">\n");
      out.write("						<li><a href=\"\">예매</a>\n");
      out.write("							<ul class=\"submenu1\">\n");
      out.write("								<li><a href=\"\">예매하기</a></li>\n");
      out.write("								<li><a href=\"\">상영시간표</a></li>\n");
      out.write("								<li><a href=\"\">할인안내</a></li>\n");
      out.write("							</ul></li>\n");
      out.write("						<li><a href=\"\">영화</a>\n");
      out.write("							<ul class=\"submenu2\">\n");
      out.write("								<li><a href=\"\">홈</a></li>\n");
      out.write("								<li><a href=\"\">현재상영작</a></li>\n");
      out.write("								<li><a href=\"\">상영예정작</a></li>\n");
      out.write("								<li><a href=\"\">아르떼</a></li>\n");
      out.write("								<li><a href=\"\">국립극장</a></li>\n");
      out.write("							</ul></li>\n");
      out.write("						<li><a href=\"\">영화관</a>\n");
      out.write("							<ul class=submenu3>\n");
      out.write("								<li><a href=\"\">스페셜관</a></li>\n");
      out.write("								<li><a href=\"\">서울</a></li>\n");
      out.write("								<li><a href=\"\">경기/인천</a></li>\n");
      out.write("								<li><a href=\"\">충청/대전</a></li>\n");
      out.write("								<li><a href=\"\">전라/광주</a></li>\n");
      out.write("								<li><a href=\"\">경상/대구</a></li>\n");
      out.write("								<li><a href=\"\">경상/부산/울산</a></li>\n");
      out.write("								<li><a href=\"\">강원</a></li>\n");
      out.write("								<li><a href=\"\">제주</a></li>\n");
      out.write("							</ul></li>\n");
      out.write("						<li><a href=\"\">이벤트</a>\n");
      out.write("							<ul class=\"submenu4\">\n");
      out.write("								<li><a href=\"\">홈</a></li>\n");
      out.write("								<li><a href=\"\">영화</a></li>\n");
      out.write("								<li><a href=\"\">시사회/무대인사</a></li>\n");
      out.write("								<li><a href=\"\">HOT</a></li>\n");
      out.write("								<li><a href=\"\">제휴할인</a></li>\n");
      out.write("								<li><a href=\"\">우리동네영화관</a></li>\n");
      out.write("							</ul></li>\n");
      out.write("						<li><a href=\"\">스토어</a>\n");
      out.write("							<ul class=\"submenu5\">\n");
      out.write("								<li><a href=\"\">베스트</a></li>\n");
      out.write("								<li><a href=\"\">관람권</a></li>\n");
      out.write("								<li><a href=\"\">스낵음료</a></li>\n");
      out.write("								<li><a href=\"\">포토카드</a></li>\n");
      out.write("							</ul></li>\n");
      out.write("						<li><a href=\"\"></a>\n");
      out.write("							<ul></ul></li>\n");
      out.write("					</ul>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("	</header>\n");
      out.write("	<!-- 메인 -->\n");
      out.write("	<!-- 마이페이지 -->\n");
      out.write("	<div class=\"mypage-warp\">\n");
      out.write("		<div class=\"mypage\">\n");
      out.write("			<!-- 마이페이지 버튼들 -->\n");
      out.write("			<ul class=\"mypage-menu\">\n");
      out.write("				<!-- 정보 수정 -->\n");
      out.write("				<li>\n");
      out.write("					<button class=\"tab-update\">\n");
      out.write("						<span class=\"img\"><img\n");
      out.write("							src=\"/resources/image/ic_my_menu_1.png\" alt=\"\"></span> <span\n");
      out.write("							class=\"myChange\">회원 정보 변경</span>\n");
      out.write("					</button>\n");
      out.write("				</li>\n");
      out.write("				<!-- 탈퇴 -->\n");
      out.write("				<li>\n");
      out.write("					<button class=\"tab-delete\">\n");
      out.write("						<span class=\"img\"><img\n");
      out.write("							src=\"/resources/image/ic_my_menu_5.png\" alt=\"\"></span> <span\n");
      out.write("							class=\"myChange2\">회원 탈퇴</span>\n");
      out.write("					</button>\n");
      out.write("				</li>\n");
      out.write("			</ul>\n");
      out.write("		</div>\n");
      out.write("		<!-- 회원 정보 수정 -->\n");
      out.write("		<div class=\"userChange\">\n");
      out.write("			<h3>회원 정보수정</h3>\n");
      out.write("			<p class=\"tip\">회원 정보입력</p>\n");
      out.write("			<!-- 수정 정보 목록 -->\n");
      out.write("			<div class=\"user-update\">\n");
      out.write("				<label for=\"\" name=\"id\" id=\"id\" style=\"padding-left: 65px;\">ID</label>\n");
      out.write("				<input type=\"text\" placeholder=\"ID를 입력해주세요.\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userDto.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n");
      out.write("				<hr />\n");
      out.write("				<label for=\"\" name=\"pw\" id=\"pw\" style=\"padding-left: 55px;\" >PW</label>\n");
      out.write("				<input type=\"password\" placeholder=\"PW를 입력해주세요.\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userDto.pw }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"s>\n");
      out.write("				<hr />\n");
      out.write("				<label for=\"\" name=\"username\" id=\"username\"\n");
      out.write("					style=\"padding-left: 47px;\">이름</label> <input type=\"text\"\n");
      out.write("					placeholder=\"이름을 입력해주세요.\">\n");
      out.write("				<hr />\n");
      out.write("				<label for=\"\" name=\"phone\" id=\"phone\">휴대폰번호</label> <input\n");
      out.write("					type=\"text\" placeholder=\"휴대폰번호를 입력해주세요.\">\n");
      out.write("				<button class=\"btn-phone\">인증</button>\n");
      out.write("				<hr />\n");
      out.write("				<label for=\"\" name=\"birth\" id=\"birth\" style=\"padding-left: 15px;\">생년월일</label>\n");
      out.write("				<select id=\"year-select\"></select> <select id=\"month-select\"></select>\n");
      out.write("				<select id=\"day-select\"></select>\n");
      out.write("				<hr />\n");
      out.write("				<label for=\"\" id=\"address\" style=\"padding-left: 45px;\">주소</label> <input\n");
      out.write("					type=\"text\" name=\"zipcode\" id=\"postcode\" placeholder=\"우편번호를 입력하세요\">\n");
      out.write("				<button class=\"btn-addr\" onclick=\"searchZip()\">우편번호검색</button>\n");
      out.write("				<input type=\"text\" name=\"addr1\" id=\"defaultAddress\"\n");
      out.write("					placeholder=\"기본주소 입력\" class=\"form-control\" style=\"width: 300px;\" />\n");
      out.write("				<input type=\"text\" name=\"addr2\" placeholder=\"상세주소 입력\"\n");
      out.write("					class=\"form-control\" style=\"width: 200px;\" />\n");
      out.write("				<hr />\n");
      out.write("			</div>\n");
      out.write("			<!-- 하단 설명 -->\n");
      out.write("			<ul class=\"non-list\">\n");
      out.write("				<li>- 필수 정보에 대해 정확히 확인해 주시기 바랍니다.</li>\n");
      out.write("			</ul>\n");
      out.write("			<!-- 하단 버튼 -->\n");
      out.write("			<div class=\"update-btn-center\">\n");
      out.write("				<button class=\"cancle-btn\">취소</button>\n");
      out.write("				<button class=\"update-btn\">완료</button>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("		<!-- 회원 탈퇴 -->\n");
      out.write("		<div class=\"userWithdraw\">\n");
      out.write("			<!-- 회원탈퇴 크게 -->\n");
      out.write("			<div class=\"toparea\">\n");
      out.write("				<h3>회원탈퇴</h3>\n");
      out.write("				<div class=\"title\">회원탈퇴전</div>\n");
      out.write("				<div class=\"headline\">꼭 유의사항을 확인해주세요.</div>\n");
      out.write("			</div>\n");
      out.write("			<!-- 탈퇴할 계정 선택 -->\n");
      out.write("			<div class=\"user-delete\">\n");
      out.write("				<h3 class=\"sub-underline\">아이디 선택</h3>\n");
      out.write("				<div class=\"id-check\">\n");
      out.write("					<input type=\"checkbox\" name=\"\" id=\"\"> <label for=\"\">여기에\n");
      out.write("						아이디 받아와서 써지게</label>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("			<!-- 탈퇴 시 유의사항 설명 -->\n");
      out.write("			<div class=\"delete-precaution\">\n");
      out.write("				<h3 class=\"sub-underline2\">유의사항</h3>\n");
      out.write("				<div class=\"row\">\n");
      out.write("					<div class=\"warning\">\n");
      out.write("						<p>- 탈퇴 시, 사용하시던 포인트 및 쿠폰 등은 복원할 수 없습니다.</p>\n");
      out.write("						<p>- 진행중인 예약 또는 이용중인 서비스가 있을 경우 탈퇴가 불가합니다.</p>\n");
      out.write("						<p>- 탈퇴 즉시 개인정보가 삭제되면, 어떠한 방법으로도 복원할 수 없습니다.</p>\n");
      out.write("						<p>- 아이디를 탈퇴하시면 결제 취소가 불가능합니다.</p>\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("			<!-- 하단 버튼 -->\n");
      out.write("			<div class=\"delete-btn-center\">\n");
      out.write("				<form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/delete.do\">\n");
      out.write("				<button class=\"cancle-btn\">취소</button>\n");
      out.write("				<button class=\"delete-btn\">탈퇴</button>\n");
      out.write("				</form>\n");
      out.write("				\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write(" \n");
      out.write("\n");
      out.write("	<!-- 푸터 -->\n");
      out.write("	<footer>\n");
      out.write("		<div class=\"footer\">\n");
      out.write("			<div class=\"inner\">\n");
      out.write("				<span class=\"footerlogo\"> <img\n");
      out.write("					src=\"/resources/image/logo3.png\" alt=\"\">\n");
      out.write("				</span>\n");
      out.write("				<ul class=\"footermenu\">\n");
      out.write("					<li><a href=\"#\">이용약관</a></li>\n");
      out.write("					<li><a href=\"#\">개인정보처리방침</a></li>\n");
      out.write("					<li><a href=\"#\">이메일무단수집거부</a></li>\n");
      out.write("					<li><a href=\"#\">영상정보처리기기 운영 및 관리방침</a></li>\n");
      out.write("					<li><a href=\"#\">L.POINT회원안내</a></li>\n");
      out.write("					<li><a href=\"#\">배정기준</a></li>\n");
      out.write("					<li><a href=\"#\">채용안내</a></li>\n");
      out.write("					<li><a href=\"#\">광고/임대문의</a></li>\n");
      out.write("					<li><a href=\"#\">기업정보</a></li>\n");
      out.write("					<li><a href=\"#\">사회적책임</a></li>\n");
      out.write("				</ul>\n");
      out.write("				<div class=\"address\">\n");
      out.write("					<address>서울특별시 송파구 올림픽로 300 롯데월드타워 27층</address>\n");
      out.write("					<span class=\"bar\">고객센터 1544-8855 (유료)</span><br> <span\n");
      out.write("						class=\"bar\">대표이사 4조</span> <span class=\"bar\">사업자등록번호\n");
      out.write("						111-11-11111</span> <span class=\"bar\">통신판매업신고번호 제1111호</span> <span\n");
      out.write("						class=\"bar\">개인정보보호책임자 4조</span>\n");
      out.write("				</div>\n");
      out.write("				<p class=\"copyright\" style=\"font-size: 12px;\">COPYRIGHT LOTTE\n");
      out.write("					CINEMA ALL RIGHT RESERVED.</p>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("	</footer>\n");
      out.write("\n");
      out.write("	<!-- 자바 스크립트 -->\n");
      out.write("<!-- 제이쿼리 -->\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\n");
      out.write("<!-- lodash cdn -->\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.21/lodash.min.js\" integrity=\"sha512-WFN04846sdKMIP5LKNphMaWzU7YpMyCU245etK3g/2ARYbPK9Ub18eG+ljU96qKRCWh+quCY7yefSmlkQw1ANQ==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"></script>\n");
      out.write("<!-- Swiper -->\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/swiper@10/swiper-bundle.min.js\"></script>\n");
      out.write("<!-- 우편 검색 -->\n");
      out.write("<script src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\n");
      out.write("<script>\n");
      out.write("     //회원 비회원 전환 버튼\n");
      out.write("    const updateBtn = document.querySelector(\".tab-update\");\n");
      out.write("    const deleteBtn = document.querySelector(\".tab-delete\");\n");
      out.write("    const ChangeBox = document.querySelector(\".userChange\");\n");
      out.write("    const WirhdrawBox = document.querySelector(\".userWithdraw\");\n");
      out.write("\n");
      out.write("    updateBtn.addEventListener(\"click\", function() {\n");
      out.write("      ChangeBox.style.display = \"block\";\n");
      out.write("      WirhdrawBox.style.display = \"none\";\n");
      out.write("    });\n");
      out.write("\n");
      out.write("    deleteBtn.addEventListener(\"click\", function() {\n");
      out.write("      WirhdrawBox.style.display = \"block\";\n");
      out.write("      ChangeBox.style.display = \"none\";\n");
      out.write("    });\n");
      out.write("\n");
      out.write("    // 생년월일 선택자\n");
      out.write("    const yearSelect = document.getElementById('year-select');\n");
      out.write("    const monthSelect = document.getElementById('month-select');\n");
      out.write("    const daySelect = document.getElementById('day-select');\n");
      out.write("\n");
      out.write("        // 연도 범위 설정 (예: 1900-2023)\n");
      out.write("      const startYear = 2023;\n");
      out.write("      const endYear = 1900;\n");
      out.write("\n");
      out.write("        // 연도 <select> 채우기\n");
      out.write("      for (let year = startYear; year >= endYear; year--) {\n");
      out.write("        const option = document.createElement('option');\n");
      out.write("        option.value = year;\n");
      out.write("        option.textContent = year;\n");
      out.write("        yearSelect.appendChild(option);\n");
      out.write("      }\n");
      out.write("\n");
      out.write("        // 월 <select> 채우기\n");
      out.write("      for (let month = 1; month <= 12; month++) {\n");
      out.write("        const option = document.createElement('option');\n");
      out.write("        option.value = month;\n");
      out.write("        option.textContent = month;\n");
      out.write("        monthSelect.appendChild(option);\n");
      out.write("      }\n");
      out.write("\n");
      out.write("        // 일 <select> 채우기\n");
      out.write("      function fillDaySelect(days) {\n");
      out.write("        daySelect.innerHTML = '';\n");
      out.write("        for (let day = 1; day <= days; day++) {\n");
      out.write("          const option = document.createElement('option');\n");
      out.write("          option.value = day;\n");
      out.write("          option.textContent = day;\n");
      out.write("          daySelect.appendChild(option);\n");
      out.write("        }\n");
      out.write("      }\n");
      out.write("\n");
      out.write("        // 기본값으로 31일로 설정\n");
      out.write("      fillDaySelect(31);\n");
      out.write("\n");
      out.write("        // 월을 선택하면 대응하는 일 수로 변경\n");
      out.write("      monthSelect.addEventListener('change', function () {\n");
      out.write("        const selectedMonth = this.value;\n");
      out.write("        let days;\n");
      out.write("        if (selectedMonth === '2') {\n");
      out.write("          days = 28; // 윤년 계산은 생략\n");
      out.write("        } else if (['4', '6', '9', '11'].includes(selectedMonth)) {\n");
      out.write("          days = 30;\n");
      out.write("        } else {\n");
      out.write("          days = 31;\n");
      out.write("        }\n");
      out.write("        fillDaySelect(days);\n");
      out.write("      });\n");
      out.write("\n");
      out.write("      // 우편 검색\n");
      out.write("      const searchZip=function()\n");
      out.write("      {\n");
      out.write("        new daum.Postcode({\n");
      out.write("            oncomplete: function(data) {\n");
      out.write("                // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분입니다.\n");
      out.write("                var addr='';\n");
      out.write("\n");
      out.write("                //사용자가 도로명 주소 선택\n");
      out.write("                if(data.userSelectedType==='R')\n");
      out.write("                {\n");
      out.write("                  addr=data.roadAddress;\n");
      out.write("                }\n");
      out.write("                else //사용자가 지번 주소 선택 'J'\n");
      out.write("                {\n");
      out.write("                  addr=data.jibunAddress;\n");
      out.write("                }\n");
      out.write("                document.getElementById('postcode').value=data.zonecode;\n");
      out.write("                document.getElementById('defaultAddress').value=addr;\n");
      out.write("                // 커서를 상세주소 필드로 이동한다.\n");
      out.write("                document.getElementById(\"addr2\").focus();\n");
      out.write("            }\n");
      out.write("        }).open();\n");
      out.write("      }\n");
      out.write("\n");
      out.write("    // // TOP 누르면 최상단 이동\n");
      out.write("    // const toTopBtn_el = document.getElementById('to_top');\n");
      out.write("    //     toTopBtn_el.addEventListener('click',function(){\n");
      out.write("    //         window.scrollTo({top:0,behavior:'smooth'})\n");
      out.write("    //     })\n");
      out.write("\n");
      out.write("    // // 스크롤시 메뉴 따라오기\n");
      out.write("    // // 좌측 광고\n");
      out.write("    // $(window).scroll(function(){\n");
      out.write("    // var scrollTop = $(document).scrollTop();\n");
      out.write("    // if (scrollTop < 300) {\n");
      out.write("    //   scrollTop = 300;\n");
      out.write("    // }\n");
      out.write("    //   $(\".left_section\").stop();\n");
      out.write("    //   $(\".left_section\").animate( { \"top\" : scrollTop });\n");
      out.write("    // });\n");
      out.write("\n");
      out.write("    // // 우측 퀵메뉴\n");
      out.write("    // $(window).scroll(function(){\n");
      out.write("    // var scrollTop = $(document).scrollTop();\n");
      out.write("    // if (scrollTop < 200) {\n");
      out.write("    //   scrollTop = 200;\n");
      out.write("    // }\n");
      out.write("    //   $(\".quick_section\").stop();\n");
      out.write("    //   $(\".quick_section\").animate( { \"top\" : scrollTop });\n");
      out.write("    // });\n");
      out.write("    // // x표시 광고 끄기\n");
      out.write("    // // 버튼과 광고 요소 선택\n");
      out.write("    // const bannerCloseButton = document.querySelector('.banner_close');\n");
      out.write("    // const leftBanner = document.querySelector('.left_banner');\n");
      out.write("\n");
      out.write("    // // 버튼 클릭 시 광고 숨기기\n");
      out.write("    // bannerCloseButton.addEventListener('click', function () {\n");
      out.write("    //   leftBanner.style.display = 'none';\n");
      out.write("    //   bannerCloseButton.style.display = 'none';\n");
      out.write("    // });\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

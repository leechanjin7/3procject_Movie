/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.78
 * Generated at: 2023-09-25 08:15:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class join222_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("jar:file:/C:/임베디드웹/project/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/MovieProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/views/member/../includes/admin/header.jsp", Long.valueOf(1695623624559L));
    _jspx_dependants.put("/WEB-INF/views/member/../includes/admin/footer.jsp", Long.valueOf(1695623727426L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1690855704120L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/resources/css/default.css\" />\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/resources/css/header.css\" />\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/resources/css/footer.css\" />\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/resources/css/join.css\" />\n");
      out.write("<script\n");
      out.write("  src=\"https://code.jquery.com/jquery-3.4.1.js\"\n");
      out.write("  integrity=\"sha256-WpOohJOqMqqyKL9FccASB9O0KwACQJpFTUBLTYOVvVU=\"\n");
      out.write("  crossorigin=\"anonymous\"></script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("	");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    	<header>\r\n");
      out.write("		<div id=\"header_section\" class=\"header\">\r\n");
      out.write("			<h1 class=\"logo\">\r\n");
      out.write("				<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/main.do\"></a>\r\n");
      out.write("			</h1>\r\n");
      out.write("			<div class=\"gnb\">\r\n");
      out.write("				<ul class=\"menu1\">\r\n");
      out.write("					<li><a href=\"\"><img src=\"/resources/image/페이스북.png\"\r\n");
      out.write("							alt=\"페이스북로고\"></a></li>\r\n");
      out.write("					<li><a href=\"\" style=\"width: 35px\"><img\r\n");
      out.write("							src=\"/resources/image/유튜브-removebg-preview.png\" alt=\"유튜브로고\"></a></li>\r\n");
      out.write("					<li><a href=\"\"><img src=\"/resources/image/인스타그램.png\"\r\n");
      out.write("							alt=\"인스타그램로고\"></a></li>\r\n");
      out.write("				</ul>\r\n");
      out.write("				<ul class=\"menu2\">\r\n");
      out.write("					<li><a href=\"\">멤버십</a></li>\r\n");
      out.write("					<li><a href=\"\">고객센터</a></li>\r\n");
      out.write("					<li><a href=\"\">단체관람/대관문의</a></li>\r\n");
      out.write("					<li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/login.do\">로그인</a></li>\r\n");
      out.write("				</ul>\r\n");
      out.write("				<ul class=\"menu3\">\r\n");
      out.write("					<li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/join.do\">회원가입</a></li>\r\n");
      out.write("					<li><a href=\"\">바로예매</a></li>\r\n");
      out.write("					<li><a href=\"\"><img src=\"/resources/image/햄버거버튼.png\"></a></li>\r\n");
      out.write("				</ul>\r\n");
      out.write("				<div class=\"nav\">\r\n");
      out.write("					<ul class=\"submenu\">\r\n");
      out.write("						<li><a href=\"\">예매</a>\r\n");
      out.write("							<ul class=\"submenu1\">\r\n");
      out.write("								<li><a href=\"\">예매하기</a></li>\r\n");
      out.write("								<li><a href=\"\">상영시간표</a></li>\r\n");
      out.write("								<li><a href=\"\">할인안내</a></li>\r\n");
      out.write("							</ul></li>\r\n");
      out.write("						<li><a href=\"\">영화</a>\r\n");
      out.write("							<ul class=\"submenu2\">\r\n");
      out.write("								<li><a href=\"\">홈</a></li>\r\n");
      out.write("								<li><a href=\"\">현재상영작</a></li>\r\n");
      out.write("								<li><a href=\"\">상영예정작</a></li>\r\n");
      out.write("								<li><a href=\"\">아르떼</a></li>\r\n");
      out.write("								<li><a href=\"\">국립극장</a></li>\r\n");
      out.write("							</ul></li>\r\n");
      out.write("						<li><a href=\"\">영화관</a>\r\n");
      out.write("							<ul class=submenu3>\r\n");
      out.write("								<li><a href=\"\">스페셜관</a></li>\r\n");
      out.write("								<li><a href=\"\">서울</a></li>\r\n");
      out.write("								<li><a href=\"\">경기/인천</a></li>\r\n");
      out.write("								<li><a href=\"\">충청/대전</a></li>\r\n");
      out.write("								<li><a href=\"\">전라/광주</a></li>\r\n");
      out.write("								<li><a href=\"\">경상/대구</a></li>\r\n");
      out.write("								<li><a href=\"\">경상/부산/울산</a></li>\r\n");
      out.write("								<li><a href=\"\">강원</a></li>\r\n");
      out.write("								<li><a href=\"\">제주</a></li>\r\n");
      out.write("							</ul></li>\r\n");
      out.write("						<li><a href=\"\">이벤트</a>\r\n");
      out.write("							<ul class=\"submenu4\">\r\n");
      out.write("								<li><a href=\"\">홈</a></li>\r\n");
      out.write("								<li><a href=\"\">영화</a></li>\r\n");
      out.write("								<li><a href=\"\">시사회/무대인사</a></li>\r\n");
      out.write("								<li><a href=\"\">HOT</a></li>\r\n");
      out.write("								<li><a href=\"\">제휴할인</a></li>\r\n");
      out.write("								<li><a href=\"\">우리동네영화관</a></li>\r\n");
      out.write("							</ul></li>\r\n");
      out.write("						<li><a href=\"\">스토어</a>\r\n");
      out.write("							<ul class=\"submenu5\">\r\n");
      out.write("								<li><a href=\"\">베스트</a></li>\r\n");
      out.write("								<li><a href=\"\">관람권</a></li>\r\n");
      out.write("								<li><a href=\"\">스낵음료</a></li>\r\n");
      out.write("								<li><a href=\"\">포토카드</a></li>\r\n");
      out.write("							</ul></li>\r\n");
      out.write("						<li><a href=\"\"></a>\r\n");
      out.write("							<ul></ul></li>\r\n");
      out.write("					</ul>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</header>\r\n");
      out.write("    ");
      out.write("\n");
      out.write("\n");
      out.write("<div class=\"wrapper\">\n");
      out.write("	<form id=\"join_form\" method=\"post\">\n");
      out.write("	<div class=\"wrap\">\n");
      out.write("			<div class=\"subjecet\">\n");
      out.write("				<span>회원가입</span>\n");
      out.write("			</div>\n");
      out.write("			<div class=\"id_wrap\">\n");
      out.write("				<div class=\"id_name\">아이디</div>\n");
      out.write("				<div class=\"id_input_box\">\n");
      out.write("					<input class=\"id_input\" name=\"memberId\">\n");
      out.write("				</div>\n");
      out.write("				<span class = \"id_input_re_1\">사용 가능한 아이디입니다.</span>\n");
      out.write("				<span class = \"id_input_re_2\">아이디가 이미 존재합니다.</span>\n");
      out.write("				<span class=\"final_id_ck\">아이디를 입력해주세요.</span>\n");
      out.write("			</div>\n");
      out.write("			<div class=\"pw_wrap\">\n");
      out.write("				<div class=\"pw_name\">비밀번호</div>\n");
      out.write("				<div class=\"pw_input_box\">\n");
      out.write("					<input class=\"pw_input\" name=\"memberPw\">\n");
      out.write("				</div>\n");
      out.write("				<span class=\"final_pw_ck\">비밀번호를 입력해주세요.</span>\n");
      out.write("			</div>\n");
      out.write("			<div class=\"pwck_wrap\">\n");
      out.write("				<div class=\"pwck_name\">비밀번호 확인</div>\n");
      out.write("				<div class=\"pwck_input_box\">\n");
      out.write("					<input class=\"pwck_input\">\n");
      out.write("				</div>\n");
      out.write("				<span class=\"final_pwck_ck\">비밀번호 확인을 입력해주세요.</span>\n");
      out.write("                <span class=\"pwck_input_re_1\">비밀번호가 일치합니다.</span>\n");
      out.write("                <span class=\"pwck_input_re_2\">비밀번호가 일치하지 않습니다.</span>\n");
      out.write("			</div>\n");
      out.write("			<div class=\"user_wrap\">\n");
      out.write("				<div class=\"user_name\">이름</div>\n");
      out.write("				<div class=\"user_input_box\">\n");
      out.write("					<input class=\"user_input\" name=\"memberName\">\n");
      out.write("				</div>\n");
      out.write("				<span class=\"final_name_ck\">이름을 입력해주세요.</span>\n");
      out.write("			</div>\n");
      out.write("			<div class=\"mail_wrap\">\n");
      out.write("				<div class=\"mail_name\">이메일</div> \n");
      out.write("				<div class=\"mail_input_box\">\n");
      out.write("					<input class=\"mail_input\" name=\"memberMail\">\n");
      out.write("				</div>\n");
      out.write("				<span class = \"final_mail_ck\">이메일을 입력해주세요.</span>\n");
      out.write("				<span class=\"mail_input_box_warn\"></span>\n");
      out.write("                <div class=\"mail_check_wrap\">\n");
      out.write("                    <div class=\"mail_check_input_box\" id=\"mail_check_input_box_false\">\n");
      out.write("                        <input class=\"mail_check_input\" disabled=\"disabled\">\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"mail_check_button\">\n");
      out.write("                        <span>인증번호 전송</span>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"clearfix\"></div>\n");
      out.write("                    <span id=\"mail_check_input_box_warn\"></span>\n");
      out.write("                </div>\n");
      out.write("			</div>\n");
      out.write("			<div class=\"address_wrap\">\n");
      out.write("				<div class=\"address_name\">주소</div>\n");
      out.write("				<div class=\"address_input_1_wrap\">\n");
      out.write("					<div class=\"address_input_1_box\">\n");
      out.write("						<input class=\"address_input_1\" name=\"memberAddr1\" readonly=\"readonly\">\n");
      out.write("					</div>\n");
      out.write("					<div class=\"address_button\" onclick=\"execution_daum_address()\">\n");
      out.write("						<span>주소 찾기</span>\n");
      out.write("					</div>\n");
      out.write("					<div class=\"clearfix\"></div>\n");
      out.write("				</div>\n");
      out.write("				<div class =\"address_input_2_wrap\">\n");
      out.write("					<div class=\"address_input_2_box\">\n");
      out.write("						<input class=\"address_input_2\" name=\"memberAddr2\" readonly=\"readonly\">\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("				<div class =\"address_input_3_wrap\">\n");
      out.write("					<div class=\"address_input_3_box\">\n");
      out.write("						<input class=\"address_input_3\" name=\"memberAddr3\" readonly=\"readonly\">\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("				<span class=\"final_addr_ck\">주소를 입력해주세요.</span>\n");
      out.write("			</div>\n");
      out.write("			<div class=\"join_button_wrap\">\n");
      out.write("				<input type=\"button\" class=\"join_button\" value=\"가입하기\">\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("	</form>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("	");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    	<footer>\r\n");
      out.write("		<div class=\"footer\">\r\n");
      out.write("			<div class=\"inner\">\r\n");
      out.write("				<span class=\"footerlogo\"> <img\r\n");
      out.write("					src=\"/resources/image/logo3.png\" alt=\"\">\r\n");
      out.write("				</span>\r\n");
      out.write("				<ul class=\"footermenu\">\r\n");
      out.write("					<li><a href=\"#\">이용약관</a></li>\r\n");
      out.write("					<li><a href=\"#\">개인정보처리방침</a></li>\r\n");
      out.write("					<li><a href=\"#\">이메일무단수집거부</a></li>\r\n");
      out.write("					<li><a href=\"#\">영상정보처리기기 운영 및 관리방침</a></li>\r\n");
      out.write("					<li><a href=\"#\">L.POINT회원안내</a></li>\r\n");
      out.write("					<li><a href=\"#\">배정기준</a></li>\r\n");
      out.write("					<li><a href=\"#\">채용안내</a></li>\r\n");
      out.write("					<li><a href=\"#\">광고/임대문의</a></li>\r\n");
      out.write("					<li><a href=\"#\">기업정보</a></li>\r\n");
      out.write("					<li><a href=\"#\">사회적책임</a></li>\r\n");
      out.write("				</ul>\r\n");
      out.write("				<div class=\"address\">\r\n");
      out.write("					<address>서울특별시 송파구 올림픽로 300 롯데월드타워 27층</address>\r\n");
      out.write("					<span class=\"bar\">고객센터 1544-8855 (유료)</span><br> <span\r\n");
      out.write("						class=\"bar\">대표이사 4조</span> <span class=\"bar\">사업자등록번호\r\n");
      out.write("						111-11-11111</span> <span class=\"bar\">통신판매업신고번호 제1111호</span> <span\r\n");
      out.write("						class=\"bar\">개인정보보호책임자 4조</span>\r\n");
      out.write("				</div>\r\n");
      out.write("				<p class=\"copyright\" style=\"font-size: 12px;\">COPYRIGHT LOTTE\r\n");
      out.write("					CINEMA ALL RIGHT RESERVED.</p>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</footer>\r\n");
      out.write("    ");
      out.write("\n");
      out.write("\n");
      out.write("<script src=\"https://t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\n");
      out.write("<script>\n");
      out.write("\n");
      out.write("	var code = \"\";					//이메일전송 인증번호 저장위한 코드\n");
      out.write("	\n");
      out.write("	/* 유효성 검사 통과유무 변수 */\n");
      out.write("	 var idCheck = false;            // 아이디\n");
      out.write("	 var idckCheck = false;            // 아이디 중복 검사\n");
      out.write("	 var pwCheck = false;            // 비번\n");
      out.write("	 var pwckCheck = false;            // 비번 확인\n");
      out.write("	 var pwckcorCheck = false;        // 비번 확인 일치 확인\n");
      out.write("	 var nameCheck = false;            // 이름\n");
      out.write("	 var mailCheck = false;            // 이메일\n");
      out.write("	 var mailnumCheck = false;        // 이메일 인증번호 확인\n");
      out.write("	 var addressCheck = false         // 주소\n");
      out.write("\n");
      out.write("\n");
      out.write("	$(document).ready(function(){\n");
      out.write("		//회원가입 버튼(회원가입 기능 작동)\n");
      out.write("		$(\".join_button\").click(function(){\n");
      out.write("			\n");
      out.write("	        /* 입력값 변수 */\n");
      out.write("	        var id = $('.id_input').val();                 // id 입력란\n");
      out.write("	        var pw = $('.pw_input').val();                // 비밀번호 입력란\n");
      out.write("	        var pwck = $('.pwck_input').val();            // 비밀번호 확인 입력란\n");
      out.write("	        var name = $('.user_input').val();            // 이름 입력란\n");
      out.write("	        var mail = $('.mail_input').val();            // 이메일 입력란\n");
      out.write("	        var addr = $('.address_input_3').val();        // 주소 입력란\n");
      out.write("	        \n");
      out.write("	        /* 아이디 유효성검사 */\n");
      out.write("	        if(id == \"\"){\n");
      out.write("	            $('.final_id_ck').css('display','block');\n");
      out.write("	            idCheck = false;\n");
      out.write("	        }else{\n");
      out.write("	            $('.final_id_ck').css('display', 'none');\n");
      out.write("	            idCheck = true;\n");
      out.write("	        }\n");
      out.write("	        \n");
      out.write("	        /* 비밀번호 유효성 검사 */\n");
      out.write("	        if(pw == \"\"){\n");
      out.write("	            $('.final_pw_ck').css('display','block');\n");
      out.write("	            pwCheck = false;\n");
      out.write("	        }else{\n");
      out.write("	            $('.final_pw_ck').css('display', 'none');\n");
      out.write("	            pwCheck = true;\n");
      out.write("	        }\n");
      out.write("	        \n");
      out.write("	        /* 비밀번호 확인 유효성 검사 */\n");
      out.write("	        if(pwck == \"\"){\n");
      out.write("	            $('.final_pwck_ck').css('display','block');\n");
      out.write("	            pwckCheck = false;\n");
      out.write("	        }else{\n");
      out.write("	            $('.final_pwck_ck').css('display', 'none');\n");
      out.write("	            pwckCheck = true;\n");
      out.write("	        }\n");
      out.write("	        \n");
      out.write("	        /* 이름 유효성 검사 */\n");
      out.write("	        if(name == \"\"){\n");
      out.write("	            $('.final_name_ck').css('display','block');\n");
      out.write("	            nameCheck = false;\n");
      out.write("	        }else{\n");
      out.write("	            $('.final_name_ck').css('display', 'none');\n");
      out.write("	            nameCheck = true;\n");
      out.write("	        }\n");
      out.write("	        \n");
      out.write("	        /* 이메일 유효성 검사 */\n");
      out.write("	        if(mail == \"\"){\n");
      out.write("	            $('.final_mail_ck').css('display','block');\n");
      out.write("	            mailCheck = false;\n");
      out.write("	        }else{\n");
      out.write("	            $('.final_mail_ck').css('display', 'none');\n");
      out.write("	            mailCheck = true;\n");
      out.write("	        }\n");
      out.write("	        \n");
      out.write("	        /* 주소 유효성 검사 */\n");
      out.write("	        if(addr == \"\"){\n");
      out.write("	            $('.final_addr_ck').css('display','block');\n");
      out.write("	            addressCheck = false;\n");
      out.write("	        }else{\n");
      out.write("	            $('.final_addr_ck').css('display', 'none');\n");
      out.write("	            addressCheck = true;\n");
      out.write("	        }\n");
      out.write("	        \n");
      out.write("	        /* 최종 유효성 검사 */\n");
      out.write("	        if(idCheck&&idckCheck&&pwCheck&&pwckCheck&&pwckcorCheck&&nameCheck&&mailCheck&&mailnumCheck&&addressCheck ){\n");
      out.write("	 \n");
      out.write("				$(\"#join_form\").attr(\"action\", \"/member/join\");\n");
      out.write("				$(\"#join_form\").submit();\n");
      out.write("	        }\n");
      out.write("	        return false;\n");
      out.write("\n");
      out.write("		});\n");
      out.write("	});\n");
      out.write("	\n");
      out.write("	//아이디 중복검사\n");
      out.write("	$('.id_input').on(\"propertychange change keyup paste input\", function(){\n");
      out.write("\n");
      out.write("		//console.log(\"keyup 테스트\");\n");
      out.write("		\n");
      out.write("		var memberId = $('.id_input').val();			// .id_input에 입력되는 값\n");
      out.write("		var data = {memberId : memberId}				// '컨트롤에 넘길 데이터 이름' : '데이터(.id_input에 입력되는 값)'\n");
      out.write("		\n");
      out.write("		$.ajax({\n");
      out.write("			type : \"post\",\n");
      out.write("			url : \"/member/memberIdChk\",\n");
      out.write("			data : data,\n");
      out.write("			success : function(result){\n");
      out.write("				 //console.log(\"성공 여부\" + result);\n");
      out.write("				if(result != 'fail'){\n");
      out.write("					$('.id_input_re_1').css(\"display\",\"inline-block\");\n");
      out.write("					$('.id_input_re_2').css(\"display\", \"none\");\n");
      out.write("					idckCheck = true;\n");
      out.write("				} else {\n");
      out.write("					$('.id_input_re_2').css(\"display\",\"inline-block\");\n");
      out.write("					$('.id_input_re_1').css(\"display\", \"none\");	\n");
      out.write("					idckCheck = false;\n");
      out.write("				}\n");
      out.write("				\n");
      out.write("			}// success 종료\n");
      out.write("		}); // ajax 종료\n");
      out.write("\n");
      out.write("	});// function 종료\n");
      out.write("	\n");
      out.write("	/* 인증번호 이메일 전송 */\n");
      out.write("	$(\".mail_check_button\").click(function(){\n");
      out.write("		\n");
      out.write("		var email = $(\".mail_input\").val();        // 입력한 이메일\n");
      out.write("		var checkBox = $(\".mail_check_input\");        // 인증번호 입력란\n");
      out.write("		var boxWrap = $(\".mail_check_input_box\");    // 인증번호 입력란 박스\n");
      out.write("		var warnMsg = $(\".mail_input_box_warn\");    // 이메일 입력 경고글\n");
      out.write("		\n");
      out.write("	    /* 이메일 형식 유효성 검사 */\n");
      out.write("	    if(mailFormCheck(email)){\n");
      out.write("	        warnMsg.html(\"이메일이 전송 되었습니다. 이메일을 확인해주세요.\");\n");
      out.write("	        warnMsg.css(\"display\", \"inline-block\");\n");
      out.write("	    } else {\n");
      out.write("	        warnMsg.html(\"올바르지 못한 이메일 형식입니다.\");\n");
      out.write("	        warnMsg.css(\"display\", \"inline-block\");\n");
      out.write("	        return false;\n");
      out.write("	    } \n");
      out.write("	    \n");
      out.write("	    $.ajax({\n");
      out.write("	        \n");
      out.write("	        type:\"GET\",\n");
      out.write("	        url:\"mailCheck?email=\" + email,\n");
      out.write("	        success:function(data){\n");
      out.write("	        	//console.log(\"data : \" + data);\n");
      out.write("	        	checkBox.attr(\"disabled\",false);\n");
      out.write("	        	boxWrap.attr(\"id\", \"mail_check_input_box_true\");\n");
      out.write("	        	code = data;\n");
      out.write("	        }\n");
      out.write("	                \n");
      out.write("	    });\n");
      out.write("		\n");
      out.write("	});\n");
      out.write("	\n");
      out.write("	/* 인증번호 비교 */\n");
      out.write("	$(\".mail_check_input\").blur(function(){\n");
      out.write("	    \n");
      out.write("	    var inputCode = $(\".mail_check_input\").val();        // 입력코드    \n");
      out.write("	    var checkResult = $(\"#mail_check_input_box_warn\");    // 비교 결과 \n");
      out.write("	    \n");
      out.write("	    if(inputCode == code){                            // 일치할 경우\n");
      out.write("	        checkResult.html(\"인증번호가 일치합니다.\");\n");
      out.write("	        checkResult.attr(\"class\", \"correct\");   \n");
      out.write("	        mailnumCheck = true;\n");
      out.write("	    } else {                                            // 일치하지 않을 경우\n");
      out.write("	        checkResult.html(\"인증번호를 다시 확인해주세요.\");\n");
      out.write("	        checkResult.attr(\"class\", \"incorrect\");\n");
      out.write("	        mailnumCheck = false;\n");
      out.write("	    }\n");
      out.write("	});\n");
      out.write("	\n");
      out.write("	/* 다음 주소 연동 */\n");
      out.write("	function execution_daum_address(){\n");
      out.write("		\n");
      out.write("	    new daum.Postcode({\n");
      out.write("	        oncomplete: function(data) {\n");
      out.write("	            // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분입니다.\n");
      out.write("	            \n");
      out.write("	        	// 각 주소의 노출 규칙에 따라 주소를 조합한다.\n");
      out.write("                // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.\n");
      out.write("                var addr = ''; // 주소 변수\n");
      out.write("                var extraAddr = ''; // 참고항목 변수\n");
      out.write(" \n");
      out.write("                //사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.\n");
      out.write("                if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우\n");
      out.write("                    addr = data.roadAddress;\n");
      out.write("                } else { // 사용자가 지번 주소를 선택했을 경우(J)\n");
      out.write("                    addr = data.jibunAddress;\n");
      out.write("                }\n");
      out.write(" \n");
      out.write("                // 사용자가 선택한 주소가 도로명 타입일때 참고항목을 조합한다.\n");
      out.write("                if(data.userSelectedType === 'R'){\n");
      out.write("                    // 법정동명이 있을 경우 추가한다. (법정리는 제외)\n");
      out.write("                    // 법정동의 경우 마지막 문자가 \"동/로/가\"로 끝난다.\n");
      out.write("                    if(data.bname !== '' && /[동|로|가]$/g.test(data.bname)){\n");
      out.write("                        extraAddr += data.bname;\n");
      out.write("                    }\n");
      out.write("                    // 건물명이 있고, 공동주택일 경우 추가한다.\n");
      out.write("                    if(data.buildingName !== '' && data.apartment === 'Y'){\n");
      out.write("                        extraAddr += (extraAddr !== '' ? ', ' + data.buildingName : data.buildingName);\n");
      out.write("                    }\n");
      out.write("                    // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.\n");
      out.write("                    if(extraAddr !== ''){\n");
      out.write("                        extraAddr = ' (' + extraAddr + ')';\n");
      out.write("                    }\n");
      out.write("                    // 주소변수 문자열과 참고항목 문자열 합치기\n");
      out.write("                    addr += extraAddr;\n");
      out.write("                \n");
      out.write("                } else {\n");
      out.write("                	addr += ' ';\n");
      out.write("                }\n");
      out.write(" \n");
      out.write("                // 우편번호와 주소 정보를 해당 필드에 넣는다.\n");
      out.write("	            $(\".address_input_1\").val(data.zonecode);\n");
      out.write("	            //$(\"[name=memberAddr1]\").val(data.zonecode);    // 대체가능\n");
      out.write("	            $(\".address_input_2\").val(addr);\n");
      out.write("	            //$(\"[name=memberAddr2]\").val(addr);            // 대체가능\n");
      out.write("                // 커서를 상세주소 필드로 이동한다.\n");
      out.write("	            // 상세주소 입력란 disabled 속성 변경 및 커서를 상세주소 필드로 이동한다.\n");
      out.write("	            $(\".address_input_3\").attr(\"readonly\",false);\n");
      out.write("	            $(\".address_input_3\").focus();\n");
      out.write("	            \n");
      out.write("	 \n");
      out.write("	        }\n");
      out.write("	    }).open(); \n");
      out.write("	    \n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	/* 비밀번호 확인 일치 유효성 검사 */\n");
      out.write("	 \n");
      out.write("	$('.pwck_input').on(\"propertychange change keyup paste input\", function(){\n");
      out.write("		\n");
      out.write("	    var pw = $('.pw_input').val();\n");
      out.write("	    var pwck = $('.pwck_input').val();\n");
      out.write("	    $('.final_pwck_ck').css('display', 'none');\n");
      out.write("	    \n");
      out.write("	    if(pw == pwck){\n");
      out.write("	        $('.pwck_input_re_1').css('display','block');\n");
      out.write("	        $('.pwck_input_re_2').css('display','none');\n");
      out.write("	        pwckcorCheck = true;\n");
      out.write("	    }else{\n");
      out.write("	        $('.pwck_input_re_1').css('display','none');\n");
      out.write("	        $('.pwck_input_re_2').css('display','block');\n");
      out.write("	        pwckcorCheck = false;\n");
      out.write("	    }\n");
      out.write("	        \n");
      out.write("	    \n");
      out.write("	});\n");
      out.write("	\n");
      out.write("	 /* 입력 이메일 형식 유효성 검사 */\n");
      out.write("	 function mailFormCheck(email){\n");
      out.write("		 var form = /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/i;\n");
      out.write("		 return form.test(email);\n");
      out.write("	 \n");
      out.write("	}\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
